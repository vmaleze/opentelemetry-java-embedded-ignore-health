plugins {
    id("java")
    id("com.github.johnrengelman.shadow")
}

ext {
    versions = [
            opentelemetrySdk           : "1.38.0",
            opentelemetryJavaagent     : "2.4.0",
            opentelemetryJavaagentAlpha: "2.4.0-alpha",
            opentelemetryContribAlpha  : "1.35.0-alpha",

            junit                      : "5.9.2"
    ]
}

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
}

configurations {
    otel
}


dependencies {
    implementation(platform("io.opentelemetry:opentelemetry-bom:${versions.opentelemetrySdk}"))
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:${versions.opentelemetryJavaagent}"))
    implementation(platform("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom-alpha:${versions.opentelemetryJavaagentAlpha}"))

    implementation("io.opentelemetry.contrib:opentelemetry-samplers:${versions.opentelemetryContribAlpha}")

    compileOnly("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure")

    testImplementation("org.testcontainers:testcontainers:1.18.0")
    testImplementation("com.fasterxml.jackson.core:jackson-databind:2.14.2")
    testImplementation("com.google.protobuf:protobuf-java-util:3.22.2")
    testImplementation("com.squareup.okhttp3:okhttp:4.10.0")
    testImplementation("io.opentelemetry:opentelemetry-api")
    testImplementation("io.opentelemetry.proto:opentelemetry-proto:1.1.0-alpha")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${versions.junit}")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${versions.junit}")
    testRuntimeOnly("ch.qos.logback:logback-classic:1.4.14")

    //Otel Java instrumentation that we use and extend
    otel("io.opentelemetry.javaagent:opentelemetry-javaagent:${versions.opentelemetryJavaagent}")
}

//Produces a copy of upstream javaagent with this extension jar included inside it
//The location of extension directory inside agent jar is hard-coded in the agent source code
tasks.register('extendedAgent', Jar) {
    dependsOn(configurations.otel)
    archiveFileName = "opentelemetry-javaagent.jar"
    from zipTree(configurations.otel.singleFile)
    from(tasks.shadowJar.archiveFile) {
        into "extensions"
    }

    //Preserve MANIFEST.MF file from the upstream javaagent
    doFirst {
        manifest.from(
                zipTree(configurations.otel.singleFile).matching {
                    include 'META-INF/MANIFEST.MF'
                }.singleFile
        )
    }
}

tasks {
    test {
        useJUnitPlatform()

        inputs.files(layout.files(tasks.extendedAgent))

        systemProperty 'io.opentelemetry.smoketest.extendedAgentPath', tasks.extendedAgent.archiveFile.get().asFile.absolutePath
    }

    compileJava {
        options.release.set(17)
    }

    assemble.dependsOn(extendedAgent)
}
